{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 0292fa837248685512f0","webpack:///./src/index.js","webpack:///./src/map_component.js","webpack:///./src/map_controller.js","webpack:///./src/detail/map-detail_controller.js","webpack:///./src/controls/map-controls_component.js","webpack:///./src/controls/map-controls_controller.js","webpack:///./src/filter/filter-builder_directive.js","webpack:///./src/filter/filter-builder_controller.js","webpack:///./src/filter/filter-input_directive.js","webpack:///./~/lodash.isarray/index.js","webpack:///./src/constants/map-settings_constant.js","webpack:///./src/constants/map-icons_constant.js","webpack:///./src/_templates.js"],"names":["angular","module","run","component","directive","constant","campusMap","bindings","onGotoBldg","mapData","templateUrl","transclude","controls","controller","MapCtrl","$timeout","$scope","$window","NgMap","$mdToast","$mdPanel","MAP_SETTINGS","MAP_ICONS","_$timeout","_$scope","_$window","_$mdToast","_$mdPanel","_MAP_SETTINGS","_MAP_ICONS","getMap","map","mapListeners","toast","simple","toastCanceler","toastActive","categories","then","instance","google","maps","event","trigger","console","log","data","setStyle","styles","feature","getProperty","title","mouseoverListener","addListener","overrideStyle","fillColor","fillOpacity","strokeWeight","strokeColor","strokeOpacity","showToast","mouseoutListener","revertStyle","hideToast","clickListener","showDetail","isolateMouseEvent","push","isFirstChange","currentValue","location","category","collection","updateMapData","forEach","removeListener","listener","clearInstanceListeners","newVal","clearMapData","features","length","addGeoJson","fitBounds","remove","left","clientX","top","clientY","panelRef","position","newPanelPosition","absolute","center","animation","newPanelAnimation","openFrom","closeTo","withAnimation","SCALE","open","attachTo","element","document","body","controllerAs","hasBackdrop","panelClass","locals","trapFocus","zIndex","clickOutsideToClose","escapeToClose","focusOnOpen","onDomRemoved","destroy","panel","featureName","textContent","hideDelay","show","cancel","updateTextContent","hide","geometry","callback","thisArg","LatLng","call","Data","Point","get","getArray","processBounds","g","bounds","LatLngBounds","getGeometry","extend","mapEvent","prop","MouseEvent","MapDetailCtrl","$sce","linked","building","name","description","trustAsHtml","desc","scene","detailsShowing","close","code","mdPanelRef","campusMapControls","require","$ngModel","MapControlsCtrl","$mapApi","$tourApi","_FeatureResource","_CollectionResource","_CategoryResource","_LocationResource","loadLocations","locations","_id","loadCategories","icon","anchor","size","width","height","loadCollections","collections","loadFeatures","filter","query","$promise","$in","setMapData","find","getItemsInListByProp","type","$setViewValue","items","list","indexOf","item","index","splice","selected","id","filterBuilder","restrict","template","bindToController","FilterBuilderCtrl","$attrs","$parse","_$attrs","_$parse","parts","$watchCollection","getViewValue","setViewValue","$parsers","parseViewValue","viewValue","$formatters","formatModelValue","modelValue","onUpdate","$viewChangeListeners","Object","keys","key","$viewValue","newViewValue","getFilter","removeNulls","modelsToSet","$name","modelName","getModel","newModel","setModel","assign","$and","array","v","filterName","filterInput","NgModelCtrl","link","FilterInputLink","scope","el","attrs","ctrl","Error","ngModel","AED","path","Size","ACCESS","FOOD","SERVICE","OUTDOOR","PARKING","DEFAULT","rotation","scale","templates","$templateCache","put"],"mappings":"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uC,MAAMN,WAAb,EAA0BL,MAA1B,CAAiCS,KAAjC,EAAwC;AAAA,aAAMH,YAAYd,SAAZ,EAAN;AAAA,MAAxC;AACA;AACDtB,sBAAkBK,KAAlB,CAAwBoC,MAAMG,OAA9B,IAAyCR,WAAzC;AACA;AAdK,GAAP;AAgBA,EAjBmB,CAApB;;mBAmBeD,W;;;;;;AC/Bf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4DAA2D;AAC3D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,0BAAyB,kBAAkB,EAAE;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"uoit-campus-map.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"campusMap\"] = factory();\n\telse\n\t\troot[\"campusMap\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0292fa837248685512f0","import campusMap from './map_component'\nimport campusMapControls from './controls/map-controls_component';\n\nimport filterBuilder from './filter/filter-builder_directive';\nimport filterInput from './filter/filter-input_directive';\n\n\nimport MAP_SETTINGS from './constants/map-settings_constant';\nimport MAP_ICONS from './constants/map-icons_constant';\n\n// development only\n//\nimport templates from './_templates';\n//\n// ----------------\n\nexport default angular.module('campusMap', [])\n\t.run(templates)\n\n  .component('campusMap', campusMap)\n  .component('campusMapControls', campusMapControls)\n\n  .directive('filterBuilder', filterBuilder)\n  .directive('filterInput', filterInput)\n\n  .constant('MAP_SETTINGS', MAP_SETTINGS)\n  .constant('MAP_ICONS', MAP_ICONS);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import MapCtrl from './map_controller.js'\n\nconst campusMap = {\n  // transclude: true,\n  bindings: {\n    onGotoBldg: '&?',\n    mapData: '<?'\n    // location: '<?',\n    // building: '<?',\n    // feature: '<?'\n  },\n  templateUrl: '_map.html',\n  transclude:  {\n    controls: 'campusMapControls'\n  },\n  controller: MapCtrl\n}\n\nexport default campusMap;\n\n\n// WEBPACK FOOTER //\n// ./src/map_component.js","import MapDetailCtrl from './detail/map-detail_controller.js';\n\n/**\n * The `MapCtrl` is the lead orchestrator of the component: it wraps the\n * `NgMap` directive's methods and provides its own for interfacing with\n * the map's controls, generating dialogs, and re-rendering the map elements.\n */\nclass MapCtrl {\n\tstatic get $inject() {\n\t\treturn [\n\t\t\t'$timeout', '$scope', '$window', // angular core\n\t\t\t'NgMap', // external deps\n\t\t\t'$mdToast', '$mdPanel', // md deps\n\t\t\t'MAP_SETTINGS', 'MAP_ICONS' // constants\n\t\t];\n\t}\n\t/**\n\t * Initialize the controller's dependencies.\n\t * \n\t * @param  {Object} $timeout     Angular's setTimeout wrapper\n\t * @param  {Object} $scope       The current scope\n\t * @param  {Object} $window      Angular's window wrapper\n\t * @param  {Object} NgMap        Angular Google Maps\n\t * @param  {Object} $mdToast     Material toast service\n\t * @param  {Object} $mdPanel     Material panel service\n\t * @param  {Object} MAP_SETTINGS Constant for map config object\n\t * @param  {Object} MAP_ICONS    Constant for map icon definitions\n\t */\n\tconstructor($timeout, $scope, $window, NgMap, $mdToast, $mdPanel, MAP_SETTINGS, MAP_ICONS) {\n    this._$timeout = $timeout;\n    this._$scope = $scope;\n    this._$window = $window;\n    this._$mdToast = $mdToast;\n    this._$mdPanel = $mdPanel;\n    this._MAP_SETTINGS = MAP_SETTINGS;\n    this._MAP_ICONS = MAP_ICONS;\n    /**\n     * Function for resolving map instance from promise.\n     * @type {Function}\n     */\n    this.getMap = NgMap.getMap;\n    /**\n     * Property to store the loaded map instance.\n     * @type {null|Object}\n     */\n    this.map = null;\n    /**\n     * Property to store map event listeners for later deregistration.\n     * @type {null|Object}\n     */\n    this.mapListeners = [];\n    /**\n     * Helper factory object for deploying simple toasts.\n     * @type {Object}\n     */\n    this.toast = $mdToast.simple();\n    /**\n     * Token to hold a toast's `$timeout`.\n     * @type {null|Promise}\n     */\n    this.toastCanceler = null;\n    /**\n     * Flag to determine whether there is already an active toast.\n     * @type {Boolean}\n     */\n    this.toastActive = false;\n    /**\n     * Object to hold map of available categories by `_id` (will be populated\n     * by `MapControlsCtrl` when categories are loaded).\n     * @type {Object}\n     */\n    this.categories = {};\n  }\n  $onInit() {\n    this.getMap().then(instance => {\n    \tthis.map = instance;\n\n    \t/*\n    \t\tThis is a stupid hack that makes the map fill space by force.\n    \t\tBest not used whenever possible; this isn't one of those times.\n    \t */\n      // angular.element(this._$window).triggerHandler('resize');\n      google.maps.event.trigger(instance, 'resize');\n      console.log(this.categories);\n      instance.data.setStyle(feature => {\n      \t// console.log(feature.getId())\n      \tconst styles = this.categories[feature.getProperty('category')];\n      \tstyles.title = feature.getProperty('name');\n        return styles //this.categories[feature.getProperty('category')];\n      });\n\n      const mouseoverListener = instance.data.addListener('mouseover', event => {\n        instance.data.overrideStyle(event.feature, {\n          fillColor: '#C71566',\n          fillOpacity: 0.7,\n          strokeWeight: 5,\n          strokeColor: 'white',\n          strokeOpacity: 0.7\n        });\n        this.showToast(event.feature);\n      });\n\n      const mouseoutListener = instance.data.addListener('mouseout', event => {\n        instance.data.revertStyle();\n        this.toastCanceler = this.hideToast();\n      });\n\n      const clickListener = instance.data.addListener('click', event => {\n        this.showDetail(event.feature, this.isolateMouseEvent(event));\n      });\n\n      this.mapListeners.push(mouseoverListener, mouseoutListener, clickListener);\n    });\n\t}\n\n\t$onChanges({ mapData }) {\n\t\tif (mapData.isFirstChange()) return;\t\n\t\tconsole.log('map component detected external changes:', mapData);\n\t\tconst\t{\n\t\t\tcurrentValue: { location, category, collection }\n\t\t} = mapData;\n\t\tif (location && collection) {\n    \tthis.location = location;\n\t\t\tthis.updateMapData({\n\t\t\t\tlocation, category, collection\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Clean up event listeners that the controller has attached via\n\t * the Google Maps API. This is especially important for the map\n\t * component in general, whose listeners may not always exist in\n\t * a context that Angular is aware of (and therefore will lead to\n\t * memory leaks if left attached).\n\t */\n\t$onDestroy() {\n\t\tthis.mapListeners.forEach(listener => google.maps.event.removeListener(listener));\n\t\tgoogle.maps.event.clearInstanceListeners(this.map.data);\n\t}\n\n\t/**\n\t * Handler method for map data `$watch`; watches incoming geoJSON\n\t * data for changes and adds it to the map if detected. If the\n\t * new data has a `showAll` property (and it is true), all features\n\t * all loaded and the map bounds are recalculated.\n\t * \n\t * @param  {Object} newVal New incoming map data\n\t */\n\tupdateMapData(newVal) {\n\t\tconsole.log('updating map data...', newVal);\n\t\treturn this.clearMapData().then(map => {\n\t\t\tif (newVal.collection.features.length && newVal.category.length) {\n\t\t      map.data.addGeoJson(newVal.collection);\n\t\t      this.fitBounds(map);\n\t\t\t\tconsole.log('map data updated!');\n\t\t\t}\n\t\t});\n\t}\n\t\n\t/**\n\t * Removes all features from the map by looping over feature\n\t * data objects and calling their `map.remove()` on them.\n\t */\n\tclearMapData() {\n\t\tconsole.log('clearing map data...');\n\t\treturn this.getMap().then(map => {\n\t\t\tmap.data.forEach(feature => {\n\t\t\t\tmap.data.remove(feature);\n\t\t\t});\n\t\t\tconsole.log('map data cleared!');\n\t\t\treturn map;\n\t\t});\n\t}\n\n\t/**\n\t * Shows a detail popup, called by user clicking map feature. This\n\t * method uses ng-material's `$mdPanel` service to build a floating\n\t * panel config, immediately show it, and manually clean up its scope\n\t * listeners on close.\n\t * @param  {Object} feature         The feature that was clicked\n\t * @param  {Object} options\n\t * @param  {Number} options.clientX Horizontal position of user's click\n\t * @param  {Number} options.clientY Vertical position of user's click\n\t * @return {Promise}                Resolves to panel reference\n\t */\n\tshowDetail(feature, { clientX: left, clientY: top }) {\n\n\t\tlet panelRef;\n\t  const position = this._$mdPanel.newPanelPosition()\n\t    .absolute().center();\n\t    // .top(`${ top }px`)\n\t    // .left(`${ left }px`);\n\n\t  const animation = this._$mdPanel.newPanelAnimation()\n      .openFrom({ top, left })\n      .closeTo({ top, left })\n\t\t\t.withAnimation(this._$mdPanel.animation.SCALE);\n\n\t  return this._$mdPanel.open({\n\t    attachTo: angular.element(document.body),\n\t    controller: MapDetailCtrl,\n\t    controllerAs: 'ctrl',\n\t    templateUrl: 'detail/_map-detail.html',\n\t    hasBackdrop: true,\n\t    panelClass: 'map-detail',\n\t    locals: {\n\t    \tonGotoBldg: this.onGotoBldg(),\n\t    \tlocation: this.location,\n\t    \tfeature\n\t    },\n\t    trapFocus: true,\n\t    zIndex: 150,\n\t    clickOutsideToClose: true,\n\t    escapeToClose: true,\n\t    focusOnOpen: true,\n\t    onDomRemoved() {\n\t    \tpanelRef.destroy();\n\t    },\n\t    animation,\n\t    position\n\t  }).then(panel => {\n\t  \tpanelRef = panel;\n\t  });\n\t}\n\n\t/**\n\t * Shows a simple toast notification containing the name of the \n\t * future being hovered over. If there is already a toast active,\n\t * it updates the name in the toast instead of making a new one.\n\t * \n\t * @param  {Object} feature The feature being hovered over\n\t */\n\tshowToast(feature) {\n\t\tlet featureName = feature.getProperty('name');\n\t\tif (!this.toastActive) {\n\t\t\tthis.toast.textContent(featureName).position('bottom left').hideDelay(0);\n\t\t\tthis._$mdToast.show(this.toast);\n\t\t\tthis.toastActive = true;\n\t\t} else {\n\t\t\tthis._$timeout.cancel(this.toastCanceler);\n\t\t\tthis._$timeout( () => {\n\t\t\t\tthis._$mdToast.updateTextContent(featureName);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Hides the toast notification after 3 seconds, but provides\n\t * a way to cancel the 3 seconds (`toastCanceler`).\n\t *\n\t * It is meant to be called on mouseout, so that the toast will\n\t * remain on screen for a few seconds, and only disappear if\n\t * another isn't needed within those seconds.\n\t * \n\t * @return {Promise} Resolves to completed timeout\n\t */\n\thideToast() {\n\t\treturn this._$timeout( () => {\n\t\t\tthis._$mdToast.hide(this.toast);\n\t\t\tthis.toastActive = false;\n\t  }, 3000);\n\t}\n\n\t/**\n\t * Direct port of Google Maps `processBounds` example function\n\t * for recalculation of map boundaries based on map data.\n\t * @param  {Object}   geometry LatLng geometry object\n\t * @param  {Function} callback Recursion callback\n\t * @param  {*}   \t\t\tthisArg  Context for `this`\n\t */\n\tprocessBounds(geometry, callback, thisArg) {\n\t  if (geometry instanceof google.maps.LatLng) {\n\t    callback.call(thisArg, geometry);\n\t  } else if (geometry instanceof google.maps.Data.Point) {\n\t    callback.call(thisArg, geometry.get());\n\t  } else {\n\t    geometry.getArray().forEach(g => {\n\t      this.processBounds(g, callback, thisArg);\n\t    });\n\t  }\n\t}\n\n\t/**\n\t * Resizes map view to fit recalculated bounds.\n\t */\n\tfitBounds(map) {\n\t  const bounds = new google.maps.LatLngBounds();\n\t  map.data.forEach(feature => {\n\t    this.processBounds(feature.getGeometry(), bounds.extend, bounds);\n\t  });\n\t  map.fitBounds(bounds);\n\t}\n\n\t/**\n\t * Since Google Map events store private properties under names\n\t * that change periodically, it is necessary to manually evaluate\n\t * which property is the `MouseEvent` by loop-and-compare. This\n\t * method returns a `MouseEvent` from a Map event.\n\t * @param  {Event} mapEvent Google map event\n\t * @return {Event}          MouseEvent\n\t */\n\tisolateMouseEvent(mapEvent) {\n\t\tfor (const prop in mapEvent) {\n\t\t\tif (mapEvent[prop] && mapEvent[prop] instanceof MouseEvent) {\n\t\t\t\tconsole.log(mapEvent[prop]);\n\t\t\t\treturn mapEvent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default MapCtrl;\n\n\n// WEBPACK FOOTER //\n// ./src/map_controller.js","/**\n * The `MapDetailCtrl` is a small controller with few responsibilties –\n * it is only instantiated by ng-material's `$mdPanel` service as a means\n * to provide data from a clicked feature to a dialog window that will\n * display the data; it also contains transition methods for viewing\n * tour items (e.g. from the dialog's _\"Take a tour\"_ button).\n *\n * Since feature descriptions can contain HTML, the `$sce` service is used\n * to parse and sanitize the descriptions for rendering. The dialog has access\n * to:\n * - the feature that the user clicked, which can include information about...\n *   - the feature itself (`feature`), which supplies its own `name` and `desc`\n *   property, **or...**\n *   - a linked tour element (`building`), which the feature inherits those\n *   properties from instead\n * - the current campus location (`location`), which will either be north or downtown.\n *\n * The `onGoToBldg()` method simply executes a callback after closing the dialog,\n * passing it the `code` property of the controller's `location` and `building` –\n * this allows the context of the action to come from outside the component (i.e.\n * the codes can be used to transition states in the application.)\n */\nclass MapDetailCtrl {\n\tstatic get $inject() {\n\t\treturn ['$sce'];\n\t}\n\n\t/**\n\t * Initializes the controller's dependencies and extracts relevant information\n\t * from data passed in via the `locals` property (when `$mdPanel` initializes\n\t * the dialog).\n\t *\n\t * If the feature's `linked` property is true, the data is extracted from\n\t * the building. If not, it is extracted directly from the feature.\n\t * \n\t * @param  {Object} $sce Angular's strict contextual escape service\n\t */\n\tconstructor($sce) {\n\t\tconst linked = this.feature.getProperty('linked');\n  \tif (linked === 'buildings' || linked === 'true') {\n  \t\tthis.building = this.feature.getProperty('building');\n  \t\tthis.name = this.building.name;\n  \t\tthis.description = $sce.trustAsHtml(this.building.desc);\n  \t} else if (linked === 'scenes') {\n  \t\tthis.scene = this.feature.getProperty('scene');\n  \t\tthis.name = this.scene.name;\n  \t} else {\n  \t\tthis.name = this.feature.getProperty('name');\n  \t\tthis.description = $sce.trustAsHtml(this.feature.getProperty('desc'));\n  \t}\n\n  \t/**\n  \t * Property to control the visibility of the description details inside\n  \t * the dialog.\n  \t * @type {Boolean}\n  \t */\n\t\tthis.detailsShowing = false;\n  }\n\n  /**\n   * Toggles the value of `detailsShowing` to hide and show the description.\n   * @return {Boolean} The visibility of the description _after_ method is run\n   */\n\tshowDetails() {\n\t\tthis.detailsShowing = !this.detailsShowing;\n\t}\n\n\t/**\n\t * Closes the dialog, and on completion, extracts the `code` property\n\t * from the controller's `location` and `building` (assuming they exist)\n\t * and runs a callback with these as the parameters.\n\t *\n\t * This can, for instance, be used to make a state transition from within\n\t * the application (as in the example below). The callback passed to this\n\t * method is the same as the one passed into the main map component.\n\t * \n\t * @example\n\t * // from app controller\n\t * const onGotoBldg = ({ location, building }) => {\n\t *   $state.go('building', { location, building });\n\t * };\n\t * // from HTML (map component)\n\t * <campus-map on-goto-bldg=\"$ctrl.onGotoBldg()\"></campus-map>\n\t * \n\t * @return {Promise}           Status of dialog close\n\t */\n\tgotoBldg() {\n\t\tconst { location, building } = this;\n\t\treturn this.close().then(() => {\n\t\t\tthis.onGotoBldg({\n\t\t\t\tlocation: location.code,\n\t\t\t\tbuilding: building.code\n\t\t\t});\n\t\t});\n\t}\n\t\n\t/**\n\t * Closes the dialog using the panel reference stored on\n\t * the controller automatically by the `$mdPanel` service.\n\t * @return {Promise} Resolves to the status of the panel close\n\t */\n\tclose() {\n\t\treturn this.mdPanelRef.close();\n\t}\n}\n\nexport default MapDetailCtrl;\n\n\n// WEBPACK FOOTER //\n// ./src/detail/map-detail_controller.js","import MapControlsCtrl from './map-controls_controller.js'\n\nconst campusMapControls = {\n  require: {\n    $ngModel: 'ngModel',\n    MapCtrl: '^campusMap'\n  },\n  templateUrl: 'controls/_map-controls.html',\n  controller: MapControlsCtrl\n}\n\nexport default campusMapControls;\n\n\n// WEBPACK FOOTER //\n// ./src/controls/map-controls_component.js","/**\n * The `MapControlsCtrl` provides an interface between the map component\n * and the map control filter dropdowns.\n * \n * It is not responsible for much actual map logic, but instead for\n * accepting user input and turning it into queries whose results\n * are assigned back to the controller. The `MapCtrl` takes care of\n * turning the returned values into map-usable data, whereas this controller\n * simply makes it available.\n *\n * The controller is made up of:\n * - constructor\n * - 3 methods for loading query results (location, category, collection)\n * - 3 methods for updating dropdown contents\n * - utility methods for setting active collection and showing all collections\n */\nclass MapControlsCtrl {\n  static get $inject(){\n    return ['$mapApi', '$tourApi'];\n  }\n\n  /**\n   * Initialize controller dependencies.\n   * \n   * @param  {Object} $mapApi  Map $resource service\n   * @param  {Object} $tourApi Tour $resource service\n   * @param  {Object} $window  Angular's window wrapper\n   */\n  constructor($mapApi, $tourApi) {\n    this._FeatureResource = $mapApi.feature;\n    this._CollectionResource = $mapApi.collection;\n    this._CategoryResource = $mapApi.category;\n    this._LocationResource = $tourApi.location;\n\n    /**\n     * Holds the user's selected location (by ID).\n     * @type {String}\n     */\n    this.location = '';\n    /**\n     * Holds the user's selected categories (by ID).\n     * @type {Array}\n     */\n    this.category = [];\n    /**\n     * Holds the user's selected feature collections (by ID).\n     * @type {Array}\n     */\n    this.collection = [];\n  }\n\n  /**\n   * Initialize the controls (show all map elements)\n   */\n  $onInit() {\n    this.loadLocations()\n      .then(locations => {\n        this.location = locations[1]._id;\n        return this.loadCategories();\n      })\n      .then(categories => {\n      \tcategories.forEach(category => {\n      \t\tconst {\n      \t\t\ticon: {\n      \t\t\t\tanchor: { left, top },\n      \t\t\t\tsize: { width, height }\n      \t\t\t}\n      \t\t} = category;\n      \t\tcategory.icon.anchor = new google.maps.Point(left, top);\n      \t\tcategory.icon.size = new google.maps.Point(width, height);\n      \t\tthis.MapCtrl.categories[category._id] = category;\n      \t});\n        this.category = [...categories.map(category => category._id)];\n        return this.loadCollections();\n      })\n      .then(collections => {\n        this.collection = [...collections.map(collection => collection._id)];\n        return this.loadFeatures(this.filter);\n      });\n  }\n\n  /**\n   * Load location list from server.\n   * \n   * @return {Promise} Resolves to list of locations\n   */\n  loadLocations() {\n    return this.locations || this._LocationResource.query().$promise\n      .then(locations => {\n        this.locations = locations;\n        return locations;\n      });\n  }\n\n  /**\n   * Load category list from server.\n   * \n   * @return {Promise} Resolves to list of categories\n   */\n  loadCategories() {\n    return this.categories || this._CategoryResource.query().$promise\n      .then(categories => {\n        this.categories = categories;\n        return categories;\n      });\n  }\n\n  /**\n   * Load collection list from server using the `_id` of the currently\n   * selected category and location (extracted directly from the\n   * controller / `this`) to filter by.\n   *\n   * @todo Update this doc to describe array of categories\n   * \n   * @return {Promise} Resolves to list of collections\n   */\n  loadCollections() {\n    return this._CollectionResource.query({\n      filter: {\n        location: this.location,\n        category: {\n          $in: [...this.category]\n        }\n      }\n    }).$promise\n      .then(collections => {\n        this.collections = collections;\n        return collections;\n      });\n  }\n\n  /**\n   * Load feature list from server using the `_id`s of the currently\n   * selected categories to filter by.\n   *\n   * @todo Update this doc to describe array of categories\n   * \n   * @return {Promise} Resolves to list of collections\n   */\n  loadFeatures(filter) {\n    return this._FeatureResource.query({ filter }).$promise\n      .then(features => {\n        this.features = features;\n        return features;\n      })\n      .then(features => {\n        return this.setMapData({\n          location: this.locations.find(location => location._id === this.location),\n          category: this.getItemsInListByProp(this.category, this.categories, '_id'),\n          collection: {\n            type: 'FeatureCollection',\n            features\n          }\n        });\n      });\n  }\n\n  /**\n   * Sends current data to view for rendering in selection dropdowns.\n   *\n   * In order for the map to properly render the selected collection, the\n   * `options.collection` param passed to this method must at least _look_\n   * like a valid `FeatureCollection` (i.e. it can be a \"true\" collection,\n   * or an object with a `type` property of `FeatureCollection` and a `features`\n   * property containing an array of `Feature` objects).\n   *\n   * In the example, both scenarios are demonstrated – the `location` and\n   * `category` properties are left out for brevity, but `location` is\n   * required in order for features to properly direct to tour scenes.\n   *\n   * @example\n   * // \"true\" collection\n   * const collection = this._CollectionResource.get('collectionId');\n   * this.setMapData({ collection });\n   * \n   * // \"mock\" collection\n   * const features = this._FeatureResource.query();\n   * this.setMapData({\n   *   collection: {\n   *     type: 'FeatureCollection',\n   *     features\n   *   }\n   * });\n   * \n   * @param {Object}  resources\n   * @param {Object}  resources.location    Currently selected location `$resource`\n   * @param {Object}  resources.category    Currently selected category `$resource`\n   * @param {Object}  resources.collection  Currently selected collection `$resource`\n   */\n  setMapData({ location, category, collection }) {\n    this.$ngModel.$setViewValue({\n      location,\n      category,\n      collection\n    });\n  }\n\n  /**\n   * Filter an array for matches in another array by a property;\n   * return the matched items.\n   * \n   * @param  {Array}  items Items to match with\n   * @param  {Array}  list  List to match from\n   * @param  {String} prop  Property to match against\n   * @return {Array}        List of filtered items\n   */\n  getItemsInListByProp(items, list, prop) {\n    return list && [...list].filter(item => {\n      return [...items].indexOf(item[prop]) !== -1;\n    });\n  }\n\n  /**\n   * Find a specific array item and remove it from the array.\n   * \n   * @param  {*}     item The item to remove\n   * @param  {Array} list The list to remove from\n   */\n  removeItemFromList(item, list) {\n    const index = [...list].indexOf(item);\n    console.log(item, list, index);\n    (index > -1) && list.splice(index, 1);\n  }\n\n  /**\n   * Checks whether the number of selected items is more than zero but\n   * less than the total of available items (sets checkbox inputs to \"indeterminate\").\n   * \n   * @param  {String}  selected Name of property that holds selected items\n   * @param  {String}  items    Name of property that holds all items\n   * @return {Boolean}          Whether checkbox should be indeterminate\n   */\n  isIndeterminate(selected, items) {\n    return (this[selected] && this[items]) && (this[selected].length !== 0 &&\n        this[selected].length !== this[items].length);\n  }\n\n  /**\n   * Utility function for determining whether all items are selected (set\n   * 'select all' checkbox to checked if so).\n   * \n   * @param  {String}  selected Name of property that holds selected items\n   * @param  {String}  items    Name of property that holds all items\n   * @return {Boolean}          Whether checkbox should be checked\n   */\n  isChecked(selected, items) {\n    return (this[selected] && this[items]) && (this[selected].length === this[items].length);\n  }\n\n  /**\n   * Utility function for or selecting or deselecting all items (set all\n   * item checkboxes to checked/unchecked).\n   * \n   * @param  {String}  selected Name of property that holds selected items\n   * @param  {String}  items    Name of property that holds all items\n   */\n  toggleAll(selected, items) {\n    if (this[selected].length === this[items].length) {\n      console.log('deselected all');\n      this[selected] = [];\n    } else if (this[selected].length >= 0) {\n      console.log('selected all');\n      this[selected] = [...this[items].map(item => item._id || item.id)];\n    }\n  }\n}\n\nexport default MapControlsCtrl;\n\n\n// WEBPACK FOOTER //\n// ./src/controls/map-controls_controller.js","import FilterBuilderCtrl from \"./filter-builder_controller.js\";\n\nfunction filterBuilder() {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplate: `<form novalidate\n\t\t\t\t\t\t\t\tng-submit=\"$event.preventDefault()\"\n\t\t\t\t\t\t\t\tlayout=\"column\"\n\t\t\t\t\t\t\t\tlayout-align=\"start center\"\n\t\t\t\t\t\t\t\tflex=\"grow\"\n\t\t\t\t\t\t\t\tng-transclude>\n\t\t\t\t\t\t\t</form>`,\n\t\trequire: {\n\t\t\t$ngModel: 'ngModel'\n\t\t},\n\t\ttransclude: true,\n\t\tbindToController: true,\n\t\tcontroller: FilterBuilderCtrl\n\t};\n}\n\nexport default filterBuilder;\n\n\n// WEBPACK FOOTER //\n// ./src/filter/filter-builder_directive.js","/**\n * The FilterBuilderCtrl class provides a controller for the\n * `<filter-builder>` directive; it contains logic for extracting\n * and combining the `ng-model` of any number of arbitrary\n * transcluded inputs inside it.\n *\n * The values of its transcluded inputs are converted to a unified\n * query filter object (MongoDB/Mongoose-style in this case).\n *\n * Unlike the `<filter-controls>` component, this directive does not\n * make any server calls or deal otherwise with with the actual map\n * data – it is purely responsible for providing the filter to make\n * the server calls with.\n */\nclass FilterBuilderCtrl {\n  static get $inject() {\n    return ['$scope', '$attrs', '$parse'];\n  }\n  constructor($scope, $attrs, $parse) {\n    this._$scope = $scope;\n    this._$attrs = $attrs;\n    this._$parse = $parse;\n    /**\n     * Holds a map of child input NgModelControllers keyed by the\n     * _string reference to the scope model_ of the input. For example,\n     * if a child input has an `ng-model=\"this.that\"` attribute, its\n     * key in this property will be `'this.that'`.\n     * \n     * Its value represents the \"model\" of this directive: the\n     * parts of this property are compiled an parsed into the final filter.\n     *\n     * @example\n     * // in HTML...\n     * `<filter-builder ng-model=\"$ctrl.animalFilter\">\n     *   <select ng-model=\"$ctrl.furType\">....</select>\n     *   <input type=\"checkbox\" ng-model=\"$ctrl.hasClaws\" />\n     * </filter builder>`\n     *\n     * // ...will result in `this.parts` being equivalent to:\n     * { '$ctrl.furType': NgModel, '$ctrl.hasClaws': NgModel }\n     * \n     * @type {Object}\n     */\n    this.parts = {};\n  }\n  /**\n   * Initializes and attaches the controller's behaviours – this includes:\n   * - setting a `$watchCollection` on the scope that...\n   *   - watches the returned value of `getViewValue()`\n   *   - responds to changes in the watch by calling `setViewValue()`\n   * - pushing `parseViewValue` onto ng-model's `$parsers`\n   * - pushing `formatModelValue` onto ng-model's `$formatters`\n   */\n  $onInit() {\n    this._$scope.$watchCollection(\n      () => this.getViewValue(),\n      () => this.setViewValue()\n    );\n\n    this.$ngModel.$parsers.push(viewValue => this.parseViewValue(viewValue));\n    this.$ngModel.$formatters.push(modelValue => this.formatModelValue(modelValue));\n\n    const onUpdate = this._$parse(this._$attrs.onUpdate);\n    this.$ngModel.$viewChangeListeners.push(() => onUpdate(this._$scope));\n  }\n\n  /**\n   * Gets the `$viewValue` of each child input from the controller's\n   * `parts` collection and returns them in a newly-mapped array\n   * for efficient `$watchCollection`ing.\n   * \n   * @return {Array} Array of $viewValues\n   */\n  getViewValue() {\n    return Object.keys(this.parts).map(key => {\n      return this.parts[key].$viewValue;\n    });\n  }\n\n  /**\n   * Sets the `$viewValue` of this directive's ng-model based on\n   * the `$watch` results of `getViewValue()`. Since the value needs\n   * to be bound by reference, the original `parts` collection is used\n   * instead of the `$watch`'s copy value.\n   *\n   * The values mapped into the new view value by this function are\n   * obtained by using the `parts[key].getFilter()` method, which is\n   * defined on the filter input directive's NgModelController object.\n   * If the value is an array, the `getFilter()` wraps the array in\n   * a MongoDB `{ $in: {...} }` operator and assigns it to a property\n   * keyed by the input's `name` attribute; if it is a primitive it\n   * is assigned without wrapping.\n   *\n   * Before `setViewValue()` is called to fire off the parser pipeline,\n   * the final value is run through `removeNulls()` to cleanse it of\n   * `null` and `undefined` values.\n   */\n  setViewValue() {\n    const newViewValue = Object.keys(this.parts).map(key => this.parts[key].getFilter());\n    this.$ngModel.$setViewValue(this.removeNulls(newViewValue));\n  }\n\n  /**\n   * The `formatModelValue` function is pushed onto the `$formatters` of\n   * the `NgModelController`. It is responsible for delegating incoming\n   * scope values (set programmatically) to their respective input elements' scopes.\n   * The function needs to:\n   * - determine which scope models are available to set\n   * - disregard incoming values with no matching input element by building an\n   * array of models with a matching value\n   *   - `[{ modelName: '$ctrl.modelName', modelValue: '...' }, {...}]`\n   * - for each available model with a matching value:\n   *   - use Angular's `$parse` service to generate a getter/setter for the\n   *   model's scope reference\n   *   - use the provided setter to set the scope reference, therefore updating\n   *   the child input elements by setting off their respective `$formatters`\n   * \n   * @param  {Object} modelValue Map of values by name to set on child scopes\n   */\n  formatModelValue(modelValue) {\n    if (modelValue) {\n      const modelsToSet = Object.keys(this.parts).map(key => {\n        return modelValue[this.parts[key].$name] && {\n          modelName: key,\n          modelValue: modelValue[this.parts[key].$name] }; \n      });\n      modelsToSet.forEach(newModel => {\n        const getModel = this._$parse(newModel.modelName),\n              setModel = getModel.assign;\n        setModel(this._$scope, newModel.modelValue)\n      });\n      // console.log(`formatter set input to`, modelsToSet);\n    }\n  }\n\n  /**\n   * The `parseViewValue` function is pushed onto the `$parsers` of\n   * the `NgModelController`. It is responsible for determining how many values\n   * are being set on the view. If the view has...\n   * - **no values**, return an empty object\n   * - **one value**, return that value\n   * - **more than one value**, return them wrapped in `{ $and: [...] }`\n   *\n   * @example\n   * // anything considered empty...\n   * []\n   * [{}]\n   * // turns into this:\n   * {}\n   *\n   * // a single predicate...\n   * [{ category: 'abc123' }];\n   * // gets flattened:\n   * { category: 'abc123' };\n   *\n   * // multiple predicates...\n   * [{ category: 'abc123' }, { feature: '123abc' }];\n   * // get wrapped with the `$and` operator:\n   * { $and: [{ category: 'abc123' }, { feature: '123abc' }] }\n   * \n   * \n   * @param  {Array} viewValue Incoming data from setViewValue\n   * @return {Object}          Final filter formatted for view\n   */\n  parseViewValue(viewValue) {\n    // console.log('builder parser (view » model)', viewValue);\n    if (!viewValue.length) return {};\n    if (viewValue.length === 1) return viewValue[0];\n    if (viewValue.length > 1) return { $and: viewValue };\n  }\n\n  /**\n   * Removes null and undefined values from a given array.\n   * \n   * @example\n   * // turns these...\n   * [0, '', false, null, null]\n   * [null, null]\n   * \n   * // ..into these:\n   * [0, '', false]\n   * []\n   * \n   * @param  {Array} array The array to remove nulls from\n   * @return {Array}       A null-free array\n   */\n  removeNulls(array) {\n    return array.filter(v => v != null);\n  }\n}\n\nexport default FilterBuilderCtrl;\n\n\n// WEBPACK FOOTER //\n// ./src/filter/filter-builder_controller.js","import isArray from \"lodash.isarray\";\n\nfunction getFilter(filterName) {\n  return (this.$viewValue && isArray(this.$viewValue)) ?\n    this.$viewValue.length ? \n      { [this.$name]: { $in: this.$viewValue } } :\n      null :\n    this.$viewValue ?\n      { [this.$name]: this.$viewValue } :\n      null;\n}\n\nconst filterInput = ['$parse', function filterInput($parse) {\n\treturn {\n\t\trestrict: 'A',\n\t\trequire: {\n\t\t\tNgModelCtrl: 'ngModel',\n\t\t\tFilterBuilderCtrl: '^filterBuilder'\n\t\t},\n\t\tlink: function FilterInputLink(scope, el, attrs, ctrl) {\n\t\t\tif (!attrs.name) throw new Error('A filter control is missing its \\'name\\' attribute!');\n\t\t\tconst { NgModelCtrl, FilterBuilderCtrl } = ctrl;\n\t\t\tNgModelCtrl.getFilter = getFilter;\n\t\t\tif (attrs.filterInput) {\n\t\t\t\t$parse(attrs.filterInput).assign(scope, () => NgModelCtrl.getFilter());\n\t\t\t}\n\t\t\tFilterBuilderCtrl.parts[attrs.ngModel] = NgModelCtrl;\n\t\t}\n\t};\n}];\n\nexport default filterInput;\n\n\n// WEBPACK FOOTER //\n// ./src/filter/filter-input_directive.js","/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]',\n    funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 equivalents which return 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash.isarray/index.js\n// module id = 9\n// module chunks = 0","const MAP_SETTINGS = {\n    type: 'ROADMAP',\n    styles: [\n    {\n      \"stylers\": [{\n        \"visibility\": \"on\"\n      }, {\n        \"saturation\": -100\n      }, {\n        \"gamma\": 0.54\n      }]\n    }, {\n      \"featureType\": \"landscape.natural\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"visibility\": \"off\"\n      }]\n    }, {\n      \"featureType\": \"road\",\n      \"elementType\": \"labels.icon\",\n      \"stylers\": [{\n        \"visibility\": \"off\"\n      }]\n    }, {\n      \"featureType\": \"water\",\n      \"stylers\": [{\n        \"color\": \"#B0B0B0\"\n      }]\n    }, {\n      \"featureType\": \"poi\",\n      \"elementType\": \"labels.icon\",\n      \"stylers\": [{\n        \"visibility\": \"off\"\n      }]\n    }, {\n      \"featureType\": \"poi\",\n      \"elementType\": \"labels.text\",\n      \"stylers\": [{\n        \"visibility\": \"off\"\n      }]\n    }, {\n      \"featureType\": \"road\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [{\n        \"color\": \"#ffffff\"\n      }]\n    }, {\n      \"featureType\": \"road.local\",\n      \"elementType\": \"labels.text\",\n      \"stylers\": [{\n        \"visibility\": \"simplified\"\n      }]\n    }, {\n      \"featureType\": \"water\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [{\n        \"color\": \"#ffffff\"\n      }]\n    }, {\n      \"featureType\": \"transit.line\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"gamma\": 0.48\n      }]\n    }, {\n      \"featureType\": \"transit.station\",\n      \"elementType\": \"labels.icon\",\n      \"stylers\": [{\n        \"visibility\": \"off\"\n      }]\n    }, {\n      \"featureType\": \"road\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [{\n        \"gamma\": 7.18\n      }]\n    }]\n    // [{\n    //   \"featureType\": \"landscape.natural\",\n    //   \"elementType\": \"geometry\",\n    //   \"stylers\": [{\n    //     \"visibility\": \"off\"\n    //   }]\n    // }, {\n    //   \"featureType\": \"poi.school\",\n    //   \"elementType\": \"geometry\",\n    //   \"stylers\": [{\n    //     \"color\": \"#ededed\"\n    //   }]\n    // }, {\n    //   \"featureType\": \"landscape.man_made\",\n    //   \"elementType\": \"geometry\",\n    //   \"stylers\": [{\n    //     \"color\": \"#0077ca\"\n    //   }]\n    // }],\n  }\n\n  export default MAP_SETTINGS;\n\n\n// WEBPACK FOOTER //\n// ./src/constants/map-settings_constant.js","const MAP_ICONS = {\n\tAED: {\n\t\tpath: 'M7.5,4A5.5,5.5 0 0,0 2,9.5C2,10 2.09,10.5 2.22,11H6.3L7.57,7.63C7.87,6.83 9.05,6.75 9.43,7.63L11.5,13L12.09,11.58C12.22,11.25 12.57,11 13,11H21.78C21.91,10.5 22,10 22,9.5A5.5,5.5 0 0,0 16.5,4C14.64,4 13,4.93 12,6.34C11,4.93 9.36,4 7.5,4V4M3,12.5A1,1 0 0,0 2,13.5A1,1 0 0,0 3,14.5H5.44L11,20C12,20.9 12,20.9 13,20L18.56,14.5H21A1,1 0 0,0 22,13.5A1,1 0 0,0 21,12.5H13.4L12.47,14.8C12.07,15.81 10.92,15.67 10.55,14.83L8.5,9.5L7.54,11.83C7.39,12.21 7.05,12.5 6.6,12.5H3Z',\n\t\tfillColor: '#c71566',\n\t\tfillOpacity: 1,\n    strokeOpacity: 0.5,\n    strokeWeight: 1,\n    strokeColor: 'white',\n    anchor: new google.maps.Point(12, 12),\n    size: new google.maps.Size(24, 24)\n\t},\n\tACCESS: {\n\t\tpath: 'M21,9H15V22H13V16H11V22H9V9H3V7H21M12,2A2,2 0 0,1 14,4A2,2 0 0,1 12,6C10.89,6 10,5.1 10,4C10,2.89 10.89,2 12,2Z',\n\t\tfillColor: '#0077CA',\n\t\tfillOpacity: 1,\n    strokeOpacity: 0.5,\n    strokeWeight: 1,\n    strokeColor: 'white',\n    anchor: new google.maps.Point(12, 12),\n    size: new google.maps.Size(24, 24)\n\t},\n\tFOOD: {\n\t\tpath: 'M3,3A1,1 0 0,0 2,4V8L2,9.5C2,11.19 3.03,12.63 4.5,13.22V19.5A1.5,1.5 0 0,0 6,21A1.5,1.5 0 0,0 7.5,19.5V13.22C8.97,12.63 10,11.19 10,9.5V8L10,4A1,1 0 0,0 9,3A1,1 0 0,0 8,4V8A0.5,0.5 0 0,1 7.5,8.5A0.5,0.5 0 0,1 7,8V4A1,1 0 0,0 6,3A1,1 0 0,0 5,4V8A0.5,0.5 0 0,1 4.5,8.5A0.5,0.5 0 0,1 4,8V4A1,1 0 0,0 3,3M19.88,3C19.75,3 19.62,3.09 19.5,3.16L16,5.25V9H12V11H13L14,21H20L21,11H22V9H18V6.34L20.5,4.84C21,4.56 21.13,4 20.84,3.5C20.63,3.14 20.26,2.95 19.88,3Z',\n\t\tfillColor: '#5F259F',\n\t\tfillOpacity: 0.8,\n    strokeOpacity: 0.5,\n    strokeWeight: 1,\n    strokeColor: 'white',\n    anchor: new google.maps.Point(12, 12),\n    size: new google.maps.Size(24, 24)\n\t},\n\tSERVICE: {\n\t\tpath: 'M18,16H6V15.1C6,13.1 10,12 12,12C14,12 18,13.1 18,15.1M12,5.3C13.5,5.3 14.7,6.5 14.7,8C14.7,9.5 13.5,10.7 12,10.7C10.5,10.7 9.3,9.5 9.3,8C9.3,6.5 10.5,5.3 12,5.3M19,2H5C3.89,2 3,2.89 3,4V18A2,2 0 0,0 5,20H9L12,23L15,20H19A2,2 0 0,0 21,18V4C21,2.89 20.1,2 19,2Z',\n\t\tfillColor: '#003c71',\n\t\tfillOpacity: 0.8,\n    strokeOpacity: 0.5,\n    strokeWeight: 1,\n    strokeColor: 'white',\n    anchor: new google.maps.Point(12, 12),\n    size: new google.maps.Size(24, 24)\n\t},\n\tOUTDOOR: {\n\t\tpath: 'M10,21V18H3L8,13H5L10,8H7L12,3L17,8H14L19,13H16L21,18H14V21H10Z',\n\t\tfillColor: '#1a875c',\n\t\tfillOpacity: 0.8,\n    strokeOpacity: 0.5,\n    strokeWeight: 1,\n    strokeColor: 'white',\n    anchor: new google.maps.Point(12, 12),\n    size: new google.maps.Size(24, 24)\n\t},\n\tPARKING: {\n\t\tpath: 'M13.2,11H10V7H13.2A2,2 0 0,1 15.2,9A2,2 0 0,1 13.2,11M13,3H6V21H10V15H13A6,6 0 0,0 19,9C19,5.68 16.31,3 13,3Z',\n\t\tfillColor: '#1a875c',\n\t\tfillOpacity: 0.8,\n    strokeOpacity: 0.5,\n    strokeWeight: 1,\n    strokeColor: 'white',\n    anchor: new google.maps.Point(12, 12),\n    size: new google.maps.Size(24, 24)\n\t},\n\tDEFAULT: {\n    path: 'M3.83,3.57A11.8,11.8,0,0,1,12.5,0a11.8,11.8,0,0,1,8.67,3.57,11.8,11.8,0,0,1,3.57,8.67,16.43,16.43,0,0,1-1.27,5.83,36,36,0,0,1-3.08,6.16q-1.81,2.88-3.57,5.38t-3,4L12.5,35l-1.31-1.52q-.82-.94-3-3.78a63.32,63.32,0,0,1-3.74-5.5,40,40,0,0,1-2.92-6A16.62,16.62,0,0,1,.26,12.24,11.8,11.8,0,0,1,3.83,3.57ZM9.42,15.32A4.2,4.2,0,0,0,12.5,16.6a4.35,4.35,0,0,0,4.35-4.35A4.35,4.35,0,0,0,12.5,7.89a4.35,4.35,0,0,0-4.35,4.35A4.2,4.2,0,0,0,9.42,15.32Z',\n    strokeColor: 'white',\n    strokeOpacity: 0.5,\n    strokeWeight: 1,\n    fillColor: '#003c71',\n    fillOpacity: 0.9,\n    rotation: 0,\n    scale: 1.0,\n    anchor: new google.maps.Point(12.5, 35),\n    size: new google.maps.Size(30, 40)\n  }\n}\n\nexport default MAP_ICONS;\n\n\n// WEBPACK FOOTER //\n// ./src/constants/map-icons_constant.js","const templates = ['$templateCache', function($templateCache) {$templateCache.put('_map.html','<ng-map\\n  center=\"43.9443802,-78.8975857\"\\n  zoom=\"17\"\\n  styles=\"{{ ::$ctrl._MAP_SETTINGS.styles }}\"\\n  map-type-id=\"{{ ::$ctrl._MAP_SETTINGS.type }}\"\\n  disable-default-u-i=\"true\"\\n  tilt=\"45\"\\n  heading=\"0\"\\n  layout\\n  layout-fill>\\n</ng-map>\\n<div ng-transclude=\"controls\" class=\"map-controls\"></div>')\n$templateCache.put('controls/_map-controls.html','<div class=\"map-controls-handle\" layout=\"row\" ng-class=\"{ \\'map-controls-open\\': $ctrl.mapControlsOpen }\">\\n\\t<md-button ng-click=\"$ctrl.mapControlsOpen = !$ctrl.mapControlsOpen\">\\n\\t  <svg style=\"width:32px;height:32px\" viewBox=\"0 0 24 24\">\\n\\t    <path fill=\"#FFFFFF\" d=\"M20,10V14H11L14.5,17.5L12.08,19.92L4.16,12L12.08,4.08L14.5,6.5L11,10H20Z\" />\\n\\t\\t</svg>\\n\\t</md-button>\\n\\n\\t<md-sidenav\\n\\t    class=\"md-sidenav-right map-controls-sidenav\"\\n\\t    md-component-id=\"uoit-campus-map:right\"\\n\\t    md-disable-backdrop\\n\\t    md-whiteframe=\"4\"\\n\\t    md-is-locked-open=\"$ctrl.mapControlsOpen\" \\n\\t    md-is-open=\"$ctrl.mapControlsOpen\"\\n\\t    layout=\"column\">\\n\\t  <md-toolbar class=\"md-primary\" layout>\\n\\t    <div class=\"md-toolbar-tools\">\\n\\t\\t  \\t<h1>Map filtering</h1>\\n\\t  \\t</div>\\n\\t  </md-toolbar>\\n\\n\\t  <md-content\\n\\t\\t  flex=\"grow\"\\n\\t\\t  layout=\"column\">\\n\\t\\t\\t<filter-builder ng-model=\"$ctrl.filter\" on-update=\"$ctrl.loadFeatures($ctrl.filter)\" layout=\"column\" layout-padding flex=\"grow\">\\n\\t\\t\\t  <md-input-container>\\n\\t\\t\\t    <label>Location</label>\\n\\t\\t\\t    <md-select ng-model=\"$ctrl.location\" md-on-open=\"$ctrl.loadLocations()\" filter-input name=\"location\" md-on-close=\"$ctrl.loadFeatures($ctrl.filter)\">\\n\\t\\t\\t      <md-option ng-repeat=\"location in ::$ctrl.locations\" ng-value=\"::location._id\" ng-disabled=\"$ctrl.location === location\">\\n\\t\\t\\t        {{ ::location.label}}\\n\\t\\t\\t      </md-option>\\n\\t\\t\\t    </md-select>\\n\\t\\t\\t  </md-input-container>\\n\\n\\t\\t\\t  <md-input-container>\\n\\t\\t\\t    <label>Feature category</label>\\n\\t\\t\\t    <md-select ng-model=\"$ctrl.category\" md-on-open=\"$ctrl.loadCategories()\" ng-disabled=\"!$ctrl.location.length\" multiple filter-input name=\"properties.category\" md-on-close=\"$ctrl.loadFeatures($ctrl.filter)\">\\n\\t\\t\\t      <md-option ng-repeat=\"category in $ctrl.categories\" ng-value=\"::category._id\" ng-disabled=\"$ctrl.category === category\">\\n\\t\\t\\t        {{ ::category.name }}\\n\\t\\t\\t      </md-option>\\n\\t\\t\\t    </md-select>\\n\\t\\t\\t  </md-input-container>\\n\\t\\t\\t  <div layout-padding>\\n\\t        <md-checkbox aria-label=\"Select All\"\\n\\t\\t\\t\\t\\t\\tng-checked=\"$ctrl.isChecked(\\'category\\', \\'categories\\')\"\\n\\t\\t\\t\\t\\t\\tmd-indeterminate=\"$ctrl.isIndeterminate(\\'category\\', \\'categories\\')\"\\n\\t\\t\\t\\t\\t\\tng-click=\"$ctrl.toggleAll(\\'category\\', \\'categories\\')\">\\n\\t\\t\\t\\t\\t\\tSelect all categories\\n\\t        </md-checkbox>\\n        </div>\\n<!-- \\t\\t\\t\\t<div>\\n\\t\\t\\t    <md-chips>\\n\\t\\t\\t      <md-chip ng-repeat=\"category in $ctrl.getItemsInListByProp($ctrl.category, $ctrl.categories, \\'_id\\') track by $index\">\\n\\t\\t\\t      \\t{{ category.name }}\\n\\t\\t\\t\\t\\t\\t  <button class=\"md-chip-remove\" ng-click=\"$ctrl.removeItemFromList(category._id, $ctrl.category)\">&times;</button>\\n\\t\\t\\t      </md-chip>\\n\\t\\t\\t\\t\\t</md-chips>\\n\\t\\t\\t\\t</div> -->\\n\\n\\t\\t\\t  <md-input-container>\\n\\t\\t\\t    <label>Feature collection</label>\\n\\t\\t\\t    <md-select ng-model=\"$ctrl.collection\" md-on-open=\"$ctrl.loadCollections()\" ng-disabled=\"!$ctrl.category.length\" multiple filter-input=\"filters.collection\" name=\"group\" md-on-close=\"$ctrl.loadFeatures($ctrl.filter)\">\\n\\t\\t\\t      <md-optgroup ng-repeat=\"group in $ctrl.getItemsInListByProp($ctrl.category, $ctrl.categories, \\'_id\\')\" label=\"{{ ::group.name }}\">\\n\\t\\t\\t        <md-option ng-repeat=\"collection in $ctrl.collections | filter: { category: group._id }\" ng-value=\"::collection._id\" ng-disabled=\"$ctrl.collection === collection\">\\n\\t\\t\\t          {{ ::collection.name }}\\n\\t\\t\\t        </md-option>\\n\\t\\t\\t      </md-optgroup>\\n\\t\\t\\t    </md-select>\\n\\t\\t\\t  </md-input-container>\\n\\t\\t\\t  <div layout-padding>\\n\\t        <md-checkbox aria-label=\"Select All\"\\n\\t\\t\\t\\t\\t\\tng-checked=\"$ctrl.isChecked(\\'collection\\', \\'collections\\')\"\\n\\t\\t\\t\\t\\t\\tmd-indeterminate=\"$ctrl.isIndeterminate(\\'collection\\', \\'collections\\')\"\\n\\t\\t\\t\\t\\t\\tng-click=\"$ctrl.toggleAll(\\'collection\\', \\'collections\\')\">\\n\\t\\t\\t\\t\\t\\tSelect all collections\\n\\t        </md-checkbox>\\n        </div>\\n\\t\\t\\t\\t<!-- <small><pre>{{ $ctrl.filter | json }}</pre></small> -->\\n\\t\\t\\t</filter-builder>\\n\\t<!--   <div layout=\"column\">\\n\\n\\t    <md-button class=\"md-primary\" ng-click=\"$ctrl.showAll()\">\\n\\t    \\tShow all\\n\\t      <md-tooltip md-direction=\"bottom\">\\n\\t        Turn on visibility for all available map features\\n\\t      </md-tooltip>\\n\\t    </md-button>\\n\\t  </div> -->\\n\\t  </md-content>\\n\\t</md-sidenav>\\n</div>')\n$templateCache.put('detail/_map-detail.html','<md-whiteframe\\n  class=\"md-whiteframe-16dp\"\\n  layout=\"column\">\\n  <md-toolbar>\\n    <div class=\"md-toolbar-tools\">\\n      <h2>\\n        <span>{{ ::ctrl.name }}</span>\\n      </h2>\\n      <span flex></span>\\n      <md-button class=\"md-icon-button\" aria-label=\"Close info\" ng-click=\"ctrl.close()\">\\n        <span>&times;</span>\\n      </md-button>\\n    </div>\\n  </md-toolbar>\\n  <div\\n  \\tlayout=\"column\"\\n  \\tlayout-margin\\n  \\tlayout-align=\"center center\">\\n    <md-button ng-click=\"ctrl.showDetails()\">{{ ctrl.detailsShowing ? \\'Hide\\' : \\'Show\\'}} details <span class=\"detail-arrow\" ng-class=\"{ \\'arrow-up\\' : ctrl.detailsShowing }\"></span></md-button>\\n  \\t<md-content layout-padding layout-margin class=\"details-text\" ng-bind-html=\"::ctrl.description\" ng-show=\"ctrl.detailsShowing\"></md-content>\\n  \\t<md-button layout-padding class=\"md-raised md-primary\" aria-label=\"Tour this building\" ng-if=\"::ctrl.building\" ng-click=\"ctrl.gotoBldg()\">\\n  \\t\\tTake a tour &raquo;\\n  \\t</md-button>\\n  </div>\\n</md-whiteframe>')}]; export default templates;\n\n\n// WEBPACK FOOTER //\n// ./src/_templates.js"],"sourceRoot":""}